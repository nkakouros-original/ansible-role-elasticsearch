---

- name: Restart elasticsearch service
  systemd:
    name: elasticsearch
    state: restarted
    enabled: true
    daemon_reload: true
  listen: elastic-restart-service

- name: Wait for errors
  block:
    - name: Check that elastic search has started successfully
      uri:
        url: "{{ elastic_node_address }}"
        return_content: true
        validate_certs: false
      register: result
      until: result is success
      retries: 11
      delay: 5
      failed_when:
        - result is failed
        - result.content is not search('missing authentication credentials')
      listen: elastic-restart-service
  rescue:
    - name: Get elasticsearch log
      command: tail -n 150 /var/log/elasticsearch/{{ elastic_cluster_name }}.log
      register: _elasticsearch_log
    - name: Print the log
      debug:
        var: _elasticsearch_log
      failed_when: true

- name: Reload secure settings
  uri:
    url: "{{ elastic_node_address }}/_nodes/reload_secure_settings"
    method: POST
    body:
      secure_settings_password: "{{ elastic_keystore_password | d('') }}"
    body_format: json
    headers:
      Content-Type: application/json
    force_basic_auth: true
    url_username: "{{ _elastic_elastic_user['name'] }}"
    url_password: "{{ _elastic_elastic_user['pass'] }}"
    validate_certs: false
  listen: elastic-reload-settings
  # **Some** settings stored in the keystore are reloadable. This means that ES
  # does not have to be restarted. Instead, the above call will make the
  # settings have immediate effect.
