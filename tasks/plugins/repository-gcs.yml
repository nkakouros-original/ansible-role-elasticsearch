---

- name: Create GCP credentials keystore setting path
  set_fact:
    _elastic_gpc_credentials:
      "gcs.client.{{ elastic_plugin_gcs_credentials.name }}.credentials_file"

- name: Remove existing GCP credentials
  command: bin/elasticsearch-keystore remove "{{ _elastic_gpc_credentials }}"
  when: elastic_plugin_gcs_refresh_credentials | bool
  register: _result
  failed_when:
    - _result is failed
    - _result.stderr is not search('does not exist in the keystore')

- name: Check if GCP credentials already in place
  command: bin/elasticsearch-keystore list
  args:
    chdir: /usr/share/elasticsearch/
  register: _elastic_keystore_settings
  changed_when: false

- name: Add GCP credentials
  block:
    - name: Upload GCP credentials file
      copy:
        src: "{{ elastic_plugin_gcs_credentials.src }}"
        dest: /tmp/auth.json
        mode: 0o400
      no_log: >-
        {{
          lookup('env', 'IN_MOLECULE')
          | default(false, true)
          | ternary(false, true)
        }}

    - name: Add GCP credentials to keystore
      command: bin/elasticsearch-keystore add-file "{{ _elastic_gpc_credentials }}" /tmp/auth.json
      args:
        chdir: /usr/share/elasticsearch/
      when: _elastic_keystore_settings.stdout is not search(_elastic_gpc_credentials)
      notify: elastic reload settings
  when:
    _elastic_keystore_settings.stdout is not search('gcs.client.' + elastic_plugin_gcs_credentials.name + 'credentials_file')

- name: Delete GCP credentials file
  file:
    path: /tmp/auth.json
    state: absent
