---

- name: Set random passwords for builtin users
  shell: >-
    set -o pipefail;
    echo y |
    /usr/share/elasticsearch/bin/elasticsearch-setup-passwords auto
  args:
    executable: /bin/bash
  register: _elastic_builtin_users
  failed_when:
    - _elastic_builtin_users is failed
    - _elastic_builtin_users.stdout is not search('Failed to verify bootstrap password')
  changed_when: _elastic_builtin_users is not failed

- name: Save built-in users new passwords locally
  copy:
    content: >-
      {{
        _elastic_builtin_users.stdout_lines
        | select('regex', '^PASSWORD')
        | map('regex_replace',
              '^PASSWORD ([^\s]+) = ([^\s]+)',
              '{"name": "\1", "password": "\2"}')
        | list
        | replace("'", '')
        | replace('u{', '{')
      }}
    dest: "{{ elastic_builtin_users_password_backup_file }}"
  when:
    - elastic_builtin_users_password_backup_file != None
    - _elastic_builtin_users is changed
  delegate_to: localhost

- block:
    - name: Register elastic user's password
      set_fact:
        _elastic_elastic_user: >-
          {{
            (
              lookup('file', elastic_builtin_users_password_backup_file)
              | from_yaml
              | selectattr('name', 'equalto', 'elastic')
              | list
            )[0]
          }}
      no_log: >-
        {{
          lookup('env', 'IN_MOLECULE')
          | default(false, true)
          | ternary(false, true)
        }}
  rescue:
    - name: Dump the password backup file
      debug:
        msg: "{{ lookup('file', elastic_builtin_users_password_backup_file) }}"
      when: lookup('env', 'IN_MOLECULE') | bool
    - name: Failing
      debug:
        msg: "a previous task ({{ ansible_failed_task }}) has failed"
